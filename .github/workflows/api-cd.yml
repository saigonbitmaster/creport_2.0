name: build api
run-name: ${{ github.actor }} is building and deploying api <U+1F680>
on:
 pull_request:
    branches:
      - staging
    types:
      - closed
    paths:
      - 'api/**'
 workflow_dispatch:
# Some objects are defined but never used lead to warnings when build
# Treating warnings as errors because process.env.CI = true ==> step build api exit code 1 and fail
# temporary fix by set process.env.CI = false
env:
  CI: false
jobs:
  build-api:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    steps:
      - run: echo "<U+1F389> The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "<U+1F427> This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "<U+1F50E> The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "<U+1F4A1> The ${{ github.repository }} repository has been cloned to the runner."
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v3.0.1
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --prefer-offline
      - name: Run yarn build-lib
        run: yarn build-lib
      - name: Build api
        run: yarn build-api
      - name: Save api/dist folder
        uses: actions/upload-artifact@v3
        with:
          name: api-dist-folder
          path: api/dist
          retention-days: 1
        #uses: RockLobster/archiving-upload-artifact@v0.2.1
        #with:
        #  name: api-dist-folder
        #  directory: .
        #  path: |
        #    - api/dist

  rsync-code:
    runs-on: ubuntu-latest
    needs: build-api
    steps:
      - name: Download api/dist folder
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_api.yml
          name: api-dist-folder
          path: api/dist
        #uses: RockLobster/unarchiving-download-artifact@v0.2.1
        #with:
        #  name: api-dist-folder
        #  path: api/dist
      - name: Get node_modules
        uses: actions/cache@v3.0.1
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Create docker-config/.env file
        uses: ozaytsev86/create-env-file@v1
        with:
          ENV_CONNECTION_STRING: ${{ secrets.ENV_CONNECTION_STRING }}
          ENV_MONGO_INITDB_ROOT_USERNAME: ${{ secrets.ENV_MONGO_INITDB_ROOT_USERNAME }}
          ENV_MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.ENV_MONGO_INITDB_ROOT_PASSWORD }}
      - name: Rsync api/dist folder to Server
        uses: easingthemes/ssh-deploy@v2
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            ARGS: ""
            SOURCE: "api/dist"
            REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
            REMOTE_USER: ${{ secrets.REMOTE_USER }}
            TARGET: /home/${{ secrets.REMOTE_USER }}/bworks_2.0/bworks_2.0/api
      - name: Rsync node_modules folder to Server
        uses: easingthemes/ssh-deploy@v2
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            ARGS: ""
            SOURCE: "./node_modules"
            REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
            REMOTE_USER: ${{ secrets.REMOTE_USER }}
            TARGET: /home/${{ secrets.REMOTE_USER }}/bworks_2.0/bworks_2.0
      - name: Rsync .env file to Server docker-config/.env
        uses: easingthemes/ssh-deploy@v2
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            ARGS: ""
            SOURCE: ".env"
            REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
            REMOTE_USER: ${{ secrets.REMOTE_USER }}
            TARGET: /home/${{ secrets.REMOTE_USER }}/bworks_2.0/bworks_2.0/docker-config

#  run-api-service:
#    needs: rsync-code
#    runs-on: ubuntu-latest
#    steps:
#      - name: Run api service
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.REMOTE_HOST }}
#          username: ${{ secrets.REMOTE_USER }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          script: |
#            cd /home/${{ secrets.REMOTE_USER }}/bworks_2.0/bworks_2.0/docker-config
#            docker-compose -f compose.yaml restart apiservice
      - run: echo "<U+1F34F> This job's status is ${{ job.status }}."
